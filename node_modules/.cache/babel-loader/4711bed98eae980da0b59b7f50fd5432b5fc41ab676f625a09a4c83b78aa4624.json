{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-a2845c40\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"container1\"\n};\nvar _hoisted_2 = {\n  \"class\": \"question-header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"timer\"\n};\nvar _hoisted_4 = {\n  \"class\": \"container2\"\n};\nvar _hoisted_5 = [\"innerHTML\"];\nvar _hoisted_6 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1);\n});\nvar _hoisted_7 = [\"disabled\"];\nvar _hoisted_8 = {\n  \"class\": \"container3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_ReportTuple = _resolveComponent(\"ReportTuple\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString(\"Question \".concat($data.questionIndex + 1, \":\")), 1), _createElementVNode(\"div\", _hoisted_3, _toDisplayString(\"Time: \".concat($data.minutes, \":\").concat($data.seconds)), 1)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", {\n    \"class\": \"question-title\",\n    innerHTML: $options.question.title\n  }, null, 8, _hoisted_5), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tupleIndex, function (index) {\n    return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(), _createBlock(_component_ReportTuple, {\n      question: $options.question,\n      \"able-edit\": $data.ableEdit,\n      key: index,\n      name: index,\n      ref_for: true,\n      ref: 'reportTuples_' + index\n    }, null, 8, [\"question\", \"able-edit\", \"name\"])), _hoisted_6]);\n  }), 256)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.addQuestion && $options.addQuestion.apply($options, arguments);\n    }),\n    disabled: !$data.ableEdit\n  }, \"+\", 8, _hoisted_7)]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.nextQuestion && $options.nextQuestion.apply($options, arguments);\n    }),\n    \"class\": \"next-button\"\n  }, \"Next\")])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","concat","$data","questionIndex","_hoisted_3","minutes","seconds","_hoisted_4","innerHTML","$options","question","title","_Fragment","_renderList","tupleIndex","index","_createBlock","_component_ReportTuple","ableEdit","key","name","ref","_hoisted_6","onClick","_cache","addQuestion","apply","arguments","disabled","_hoisted_7","_hoisted_8","nextQuestion"],"sources":["D:\\JiamouSun\\tosem_exp\\src\\components\\Report.vue"],"sourcesContent":["<template>\r\n  <div class=\"container1\">\r\n    <div class=\"question-header\">\r\n      <h2>{{ `Question ${questionIndex + 1}:` }}</h2>\r\n      <div class=\"timer\">{{ `Time: ${minutes}:${seconds}` }}</div>\r\n    </div>\r\n    <div class=\"container2\">\r\n      <p class=\"question-title\" v-html=\"question.title\"></p>\r\n      <div v-for=\"index in tupleIndex\" >\r\n        <ReportTuple :question=\"question\" :able-edit=\"ableEdit\" :key=\"index\" :name=\"index\" :ref=\"'reportTuples_'+index\"/>\r\n        <hr>\r\n      </div>\r\n      <button @click=\"addQuestion\" :disabled=\"!ableEdit\">+</button>\r\n    </div>\r\n    <div class=\"container3\">\r\n      <button @click=\"nextQuestion\" class=\"next-button\">Next</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ReportTuple from './ReportTuple.vue'\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport default {\r\n  name: \"Report\",\r\n  components: {\r\n    ReportTuple\r\n  },\r\n  data() {\r\n    return {\r\n      questionIndex: 0,\r\n      minutes: 10,\r\n      seconds: 0,\r\n      tupleIndex: 1,\r\n      ableEdit: true,\r\n      answers: [],\r\n      finalStoredData:{},\r\n      questions: [\r\n        {\r\n          title: 'Please compare the products: <b>google android</b> vs <b>apple iphone os</b>',\r\n          options: ['google android is better', 'apple iphone os is better', 'they are equal', 'hard to say']\r\n        },\r\n        {\r\n          title: 'Please compare the products: <b>microsoft windows</b> vs <b>linux kernel</b>',\r\n          options: ['microsoft windows is better', 'linux kernel is better', 'they are equal', 'hard to say']\r\n        },\r\n        {\r\n          title: 'Please compare the products: <b>google chrome</b> vs <b>mozilla firefox</b>',\r\n          options: ['google chrome is better', 'mozilla firefox is better', 'they are equal', 'hard to say']\r\n        },{\r\n          title: 'Please compare the products: <b>microsoft windows server</b> vs <b>apple mac os x server</b>',\r\n          options: ['microsoft windows server is better', 'apple mac os x server is better', 'they are equal', 'hard to say']\r\n        },\r\n      ],\r\n    }\r\n  },\r\n  created() {\r\n    this.createAnswer(this.tupleIndex);\r\n  },\r\n  computed: {\r\n    question() {\r\n      return this.questions[this.questionIndex]\r\n    },\r\n  },\r\n  methods: {\r\n    startTimer() {\r\n      setInterval(() => {\r\n        if (this.seconds > 0) {\r\n          this.seconds--\r\n        } else if (this.minutes > 0) {\r\n          this.minutes--\r\n          this.seconds = 59\r\n        } else {\r\n          // Time is up\r\n          this.ableEdit = false\r\n        }\r\n      }, 1000)\r\n    },\r\n    addQuestion() {\r\n      // Code to add a new question\r\n      this.tupleIndex += 1;\r\n      this.createAnswer(this.tupleIndex);\r\n    },\r\n    createAnswer(index) {\r\n      var answer = {'tuple_id':index};\r\n      this.answers.push(answer);\r\n    },\r\n    resetParameters() {\r\n      this.minutes = 10;\r\n      this.seconds = 0;\r\n      this.tupleIndex = 1;\r\n      this.ableEdit = true;\r\n      this.answers = [];\r\n      this.$refs['reportTuples_1'][0].resetParameters();\r\n      this.createAnswer(this.tupleIndex);\r\n    },\r\n    nextQuestion(){\r\n      console.log(this.$refs)\r\n      for (var i=0;i<this.tupleIndex;i++) {\r\n        this.answers[i]['selectedOption'] = this.$refs['reportTuples_'+(i+1)][0].selectedOption\r\n        this.answers[i]['reason'] = this.$refs['reportTuples_'+(i+1)][0].reason\r\n        this.answers[i]['references'] = this.$refs['reportTuples_'+(i+1)][0].references\r\n      }\r\n      console.log(this.answers)\r\n      this.finalStoredData['answers_'+(this.questionIndex+1)] = {'answers':this.answers, 'min':9-this.minutes,\r\n        'sec':60-this.seconds}\r\n\r\n      if (this.questionIndex < 3) {\r\n        this.questionIndex += 1;\r\n        this.resetParameters()\r\n      } else {\r\n        this.saveAsJSON();\r\n        this.$router.push('/thanks');\r\n      }\r\n    },\r\n    saveAsJSON() {\r\n      const data = JSON.stringify(this.finalStoredData, null, 2);\r\n      const filename = this.$route.params.name + '.json';\r\n      const blob = new Blob([data], { type: 'text/plain;charset=utf-8' });\r\n      saveAs(blob, filename);\r\n    }\r\n\r\n  },\r\n  mounted() {\r\n    this.startTimer();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container1 {\r\n  width: 66.67%;\r\n  margin: auto;\r\n}\r\n.container2 {\r\n  width: 90%;\r\n  margin: auto;\r\n  text-align: left;\r\n  font-size: 1.2rem;\r\n}\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.question-title {\r\n  margin-bottom: 1.5rem;\r\n}\r\n.timer {\r\n  font-size: 1.2rem;\r\n}\r\n.container3 {\r\n  display: flex;\r\n  width: 100%;\r\n  margin-top: 1.5rem;\r\n}\r\n.next-button {\r\n  margin-left: auto;\r\n}\r\n</style>"],"mappings":";;;;;;EACO,SAAM;AAAY;;EAChB,SAAM;AAAiB;;EAErB,SAAM;AAAO;;EAEf,SAAM;AAAY;;;sBAInBA,mBAAA,CAAI;AAAA;;;EAIH,SAAM;AAAY;;;uBAbzBC,mBAAA,CAgBM,OAhBNC,UAgBM,GAfJF,mBAAA,CAGM,OAHNG,UAGM,GAFJH,mBAAA,CAA+C,YAAAI,gBAAA,aAAAC,MAAA,CAA5BC,KAAA,CAAAC,aAAa,iBAChCP,mBAAA,CAA4D,OAA5DQ,UAA4D,EAAAJ,gBAAA,UAAAC,MAAA,CAA7BC,KAAA,CAAAG,OAAO,OAAAJ,MAAA,CAAIC,KAAA,CAAAI,OAAO,O,GAEnDV,mBAAA,CAOM,OAPNW,UAOM,GANJX,mBAAA,CAAsD;IAAnD,SAAM,gBAAgB;IAACY,SAAuB,EAAfC,QAAA,CAAAC,QAAQ,CAACC;8CAC3Cd,mBAAA,CAGMe,SAAA,QAAAC,WAAA,CAHeX,KAAA,CAAAY,UAAU,YAAnBC,KAAK;yBAAjBlB,mBAAA,CAGM,e,cAFJmB,YAAA,CAAiHC,sBAAA;MAAnGP,QAAQ,EAAED,QAAA,CAAAC,QAAQ;MAAG,WAAS,EAAER,KAAA,CAAAgB,QAAQ;MAAGC,GAAG,EAAEJ,KAAK;MAAGK,IAAI,EAAEL,KAAK;;MAAGM,GAAG,oBAAkBN;qDACzGO,UAAI,C;aAEN1B,mBAAA,CAA6D;IAApD2B,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEf,QAAA,CAAAgB,WAAA,IAAAhB,QAAA,CAAAgB,WAAA,CAAAC,KAAA,CAAAjB,QAAA,EAAAkB,SAAA,CAAW;IAAA;IAAGC,QAAQ,GAAG1B,KAAA,CAAAgB;KAAU,GAAC,KAAAW,UAAA,E,GAEtDjC,mBAAA,CAEM,OAFNkC,UAEM,GADJlC,mBAAA,CAA+D;IAAtD2B,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEf,QAAA,CAAAsB,YAAA,IAAAtB,QAAA,CAAAsB,YAAA,CAAAL,KAAA,CAAAjB,QAAA,EAAAkB,SAAA,CAAY;IAAA;IAAE,SAAM;KAAc,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}